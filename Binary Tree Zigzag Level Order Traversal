/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int>> v1;
        if(root==NULL){return v1;}
        queue<TreeNode*> q;
        q.push(root);
        int count = 1;
        while(q.empty()==false){
            vector<int> v2;
            int sz = q.size();
            while(sz--){
                TreeNode* curr = q.front();
                q.pop();
                v2.push_back(curr->val);
                if(curr->left){q.push(curr->left);}
                if(curr->right){q.push(curr->right);}
            }
            // count++;
            if(count%2==0){
                reverse(v2.begin(),v2.end());
            }
            // for(int i=0;i<v2.size();i++){
            //     v1.push_back(v2[i]);
            // }
            count++;
            v1.push_back(v2);
            //count!=count;
        }
        return v1;
    }
};
