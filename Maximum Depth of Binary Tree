    /**
     * Definition for a binary tree node.
     * struct TreeNode {
     *     int val;
     *     TreeNode *left;
     *     TreeNode *right;
     *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
     *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
     *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
     * };
     */
    class Solution {
    public:
        int maxDepth(TreeNode* root) {
            //int count =0;
            int res=0;
            if(root==nullptr){return 0;}
            queue<TreeNode*>q1;
            q1.push(root);
            while(q1.empty()==false){
                vector<int>v1;
                int sz=q1.size();
                while(sz--){
                    TreeNode* temp=q1.front();
                    v1.push_back(temp->val);
                    q1.pop();
                    if(temp->left!=NULL){q1.push(temp->left);}
                    if(temp->right!=NULL){q1.push(temp->right);}
                }
                res++;
            }
            return res;
        }
    };
