class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        if(nums.size()==1 && k==1){return nums;}
        vector<int>ans;
        unordered_map<int,int>ump;
        priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>>min;
        
        for(int i=0;i<nums.size();i++){
            ump[nums[i]]++;
        }
        
        for(auto it=ump.begin();it!=ump.end();it++){
            min.push({it->second,it->first});
            if(min.size()>k){
                min.pop();
            }
        }
        
        while(min.size()!=0){
            ans.push_back(min.top().second);
            min.pop();
        }
        return ans;
    }
};
