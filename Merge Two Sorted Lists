/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        if(l1==NULL&&l2==NULL){return NULL;}
        if(l2==NULL){return l1;}
        else if(l1==NULL ){return l2;}
        
        ListNode*tmp=l1;
        ListNode*ptr=l1;
        ListNode*cpt;
        int swap;
        
        while(tmp->next!=NULL){
            tmp=tmp->next;
        }
        tmp->next=l2;
        while(ptr->next!=NULL){
            cpt=ptr->next;
            while(cpt!=NULL){
                if(ptr->val>cpt->val){
                    swap=ptr->val;
                    ptr->val = cpt->val;
                    cpt->val = swap;
                }
                cpt=cpt->next;
            }
            ptr=ptr->next;
        }
        return l1;
    }
};
