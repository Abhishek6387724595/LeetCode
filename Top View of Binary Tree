class Solution{
  public:
    
    vector<int> topView(Node *root)
    {
        vector<int> ans;
        if(root == NULL){
            return ans;
        }
    
        //Node *temp = NULL;
    
        queue<pair<Node *, int>> q;
    
        map<int, int> mp;
    
        q.push({root, 0});
    
        // doing level order traversal and finding the extreme elements
        while(q.empty()==false){
    
            Node * t = q.front().first;
            int d = q.front().second;
            q.pop();
    
            if(mp.find(d) == mp.end())
            {
                // cout << temp->data << " ";
                mp[d] = t->data;
            }
    
            if(t->left)
            {
                q.push({t->left, d-1});
            }
    
            if(t->right)
            {
                q.push({t->right, d+1});
            }
        }
    
        for(auto it = mp.begin(); it != mp.end(); it++){
            ans.push_back(it->second);
        }
        
        return ans;
    }
};
