/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isUnivalTree(TreeNode* root) {
        vector<int>v1;
        if(root==NULL){return 0;}
        queue<TreeNode*>q1;
        q1.push(root);
        while(q1.empty()==false){
            TreeNode* curr = q1.front();
            q1.pop();
            v1.push_back(curr->val);
            if(curr->left!=NULL){q1.push(curr->left);}
            if(curr->right!=NULL){q1.push(curr->right);}
        }
        for(int i=1;i<v1.size();i++){
            if(v1[i]!=v1[0]){
                return false;
            }
        }
        return true;
    }
};
