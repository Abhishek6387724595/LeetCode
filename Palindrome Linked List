/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    bool isPalindrome(ListNode* head) {
        ListNode*ptr=head;
        vector<int> v1;
        while(ptr!=NULL){
            v1.push_back(ptr->val);
            ptr=ptr->next;
        }
        int n=v1.size();
        int flag=0;
        for(int i=0;i<n/2;i++){
            if(v1[i]!=v1[n-i-1]){
                flag=1;
                break;
            }
        }
        if(flag==1){
            return false;
        }
        else
            return true;
    }
};
