/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {
        vector<int>v1;
        if(root==NULL){return v1;}
        queue<TreeNode*> q1;
        q1.push(root);
        while(q1.empty()==false){
            int count=q1.size();
            for(int i=0;i<count;i++){
                TreeNode* curr=q1.front();
                q1.pop();
                if(i==count-1){v1.push_back(curr->val);}
                if(curr->left!=NULL){q1.push(curr->left);}
                if(curr->right!=NULL){q1.push(curr->right);}
            }
        }
        return v1;
    }
};
