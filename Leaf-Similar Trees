/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    vector<int>v1;
    vector<int>v2;
public:
    void getLeaf(TreeNode* root,vector<int>&v){
        if(root->left==NULL and root->right==NULL){v.push_back(root->val);}
        if(root->left!=NULL){getLeaf(root->left,v);}
        if(root->right!=NULL){getLeaf(root->right,v);}
    }
    bool leafSimilar(TreeNode* root1, TreeNode* root2) {
        //if(root1==NULL && root2==NULL){return 0;}
        getLeaf(root1,v1);
        getLeaf(root2,v2);
        if(v1==v2){return true;}
        else{return false;}
    }
};
